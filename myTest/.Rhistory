lab = c("original", "with acc")),
aes(x,y,label = lab), fill = 'lightsteelblue4', colour = "white", fontface = "bold") +
xlim(15000, max(as.loc1))
plot.h
orig.y <- 10; new.y <- 30
plot.h <-
ggplot(as.data.frame(as.loc1), aes(as.loc1)) +
geom_histogram(bins = 50) +
geom_segment(aes(x = start, y = orig.y,
xend = end, yend = orig.y,
colour = type.ab),
size = 3, data = gff0)+
geom_segment(aes(x = start, y = new.y,
xend = end, yend = new.y,
colour = type.ab),
size = 3, data = gff) +
labs(x = 'Location', title = 'adaptive sub counts with only deletion') +
geom_label(data = data.frame(x = rep(20000, 2),
y = c(orig.y, new.y),
lab = c("original", "with acc")),
aes(x,y,label = lab), fill = 'lightsteelblue4', colour = "white", fontface = "bold") +
xlim(15000, max(as.loc1))
plot.h
pdf('v2_test_2.pdf')
orig.y <- 10; new.y <- 30
plot.h <-
ggplot(as.data.frame(as.loc1), aes(as.loc1)) +
geom_histogram(bins = 50) +
geom_segment(aes(x = start, y = orig.y,
xend = end, yend = orig.y,
colour = type.ab),
size = 3, data = gff0)+
geom_segment(aes(x = start, y = new.y,
xend = end, yend = new.y,
colour = type.ab),
size = 3, data = gff) +
labs(x = 'Location', title = 'adaptive sub counts with only deletion') +
geom_label(data = data.frame(x = rep(20000, 2),
y = c(orig.y, new.y),
lab = c("original", "with acc")),
aes(x,y,label = lab), fill = 'lightsteelblue4', colour = "white", fontface = "bold") +
xlim(15000, max(as.loc1))
plot.h
dev.off()
orig.y <- 10; new.y <- 30
plot.h <-
ggplot(as.data.frame(as.loc2), aes(as.loc2)) +
geom_histogram(bins = 50) +
geom_segment(aes(x = start, y = orig.y,
xend = end, yend = orig.y,
colour = type.ab),
size = 3, data = gff0)+
geom_segment(aes(x = start, y = new.y,
xend = end, yend = new.y,
colour = type.ab),
size = 3, data = gff) +
labs(x = 'Location', title = 'adaptive sub counts with only deletion') +
geom_label(data = data.frame(x = rep(20000, 2),
y = c(orig.y, new.y),
lab = c("original", "with acc")),
aes(x,y,label = lab), fill = 'lightsteelblue4', colour = "white", fontface = "bold") +
xlim(15000, max(as.loc1))
plot.h
plot.h <-
ggplot(as.data.frame(as.loc2), aes(as.loc2)) +
geom_histogram(bins = 50) +
geom_segment(aes(x = start, y = orig.y,
xend = end, yend = orig.y,
colour = type.ab),
size = 3, data = gff0)+
geom_segment(aes(x = start, y = new.y,
xend = end, yend = new.y,
colour = type.ab),
size = 3, data = gff) +
labs(x = 'Location', title = 'adaptive sub counts without insertion or deletion') +
geom_label(data = data.frame(x = rep(20000, 2),
y = c(orig.y, new.y),
lab = c("original", "with acc")),
aes(x,y,label = lab), fill = 'lightsteelblue4', colour = "white", fontface = "bold") +
xlim(15000, max(as.loc1))
plot.h
orig.y <- 10; new.y <- 20
plot.h <-
ggplot(as.data.frame(as.loc2), aes(as.loc2)) +
geom_histogram(bins = 50) +
geom_segment(aes(x = start, y = orig.y,
xend = end, yend = orig.y,
colour = type.ab),
size = 3, data = gff0)+
geom_segment(aes(x = start, y = new.y,
xend = end, yend = new.y,
colour = type.ab),
size = 3, data = gff) +
labs(x = 'Location', title = 'adaptive sub counts without insertion or deletion') +
geom_label(data = data.frame(x = rep(20000, 2),
y = c(orig.y, new.y),
lab = c("original", "with acc")),
aes(x,y,label = lab), fill = 'lightsteelblue4', colour = "white", fontface = "bold") +
xlim(15000, max(as.loc1))
plot.h
orig.y <- 1; new.y <- 30
plot.h <-
ggplot(as.data.frame(as.loc1), aes(as.loc1)) +
geom_histogram(bins = 50) +
geom_segment(aes(x = start, y = orig.y,
xend = end, yend = orig.y,
colour = type.ab),
size = 3, data = gff0)+
geom_segment(aes(x = start, y = new.y,
xend = end, yend = new.y,
colour = type.ab),
size = 3, data = gff) +
labs(x = 'Location', title = 'adaptive sub counts with only deletion') +
geom_label(data = data.frame(x = rep(20000, 2),
y = c(orig.y, new.y),
lab = c("original", "with acc")),
aes(x,y,label = lab), fill = 'lightsteelblue4', colour = "white", fontface = "bold") +
xlim(15000, max(as.loc1))
plot.h
orig.y <- 2; new.y <- 30
plot.h <-
ggplot(as.data.frame(as.loc1), aes(as.loc1)) +
geom_histogram(bins = 50) +
geom_segment(aes(x = start, y = orig.y,
xend = end, yend = orig.y,
colour = type.ab),
size = 3, data = gff0)+
geom_segment(aes(x = start, y = new.y,
xend = end, yend = new.y,
colour = type.ab),
size = 3, data = gff) +
labs(x = 'Location', title = 'adaptive sub counts with only deletion') +
geom_label(data = data.frame(x = rep(20000, 2),
y = c(orig.y, new.y),
lab = c("original", "with acc")),
aes(x,y,label = lab), fill = 'lightsteelblue4', colour = "white", fontface = "bold") +
xlim(15000, max(as.loc1))
plot.h
orig.y <- 3; new.y <- 30
plot.h <-
ggplot(as.data.frame(as.loc1), aes(as.loc1)) +
geom_histogram(bins = 50) +
geom_segment(aes(x = start, y = orig.y,
xend = end, yend = orig.y,
colour = type.ab),
size = 3, data = gff0)+
geom_segment(aes(x = start, y = new.y,
xend = end, yend = new.y,
colour = type.ab),
size = 3, data = gff) +
labs(x = 'Location', title = 'adaptive sub counts with only deletion') +
geom_label(data = data.frame(x = rep(20000, 2),
y = c(orig.y, new.y),
lab = c("original", "with acc")),
aes(x,y,label = lab), fill = 'lightsteelblue4', colour = "white", fontface = "bold") +
xlim(15000, max(as.loc1))
plot.h
orig.y <- 3; new.y <- 50
plot.h <-
ggplot(as.data.frame(as.loc1), aes(as.loc1)) +
geom_histogram(bins = 50) +
geom_segment(aes(x = start, y = orig.y,
xend = end, yend = orig.y,
colour = type.ab),
size = 3, data = gff0)+
geom_segment(aes(x = start, y = new.y,
xend = end, yend = new.y,
colour = type.ab),
size = 3, data = gff) +
labs(x = 'Location', title = 'adaptive sub counts with only deletion') +
geom_label(data = data.frame(x = rep(20000, 2),
y = c(orig.y, new.y),
lab = c("original", "with acc")),
aes(x,y,label = lab), fill = 'lightsteelblue4', colour = "white", fontface = "bold") +
xlim(15000, max(as.loc1))
plot.h
orig.y <- 3; new.y <- 5
plot.h <-
ggplot(as.data.frame(as.loc1), aes(as.loc1)) +
geom_histogram(bins = 50) +
geom_segment(aes(x = start, y = orig.y,
xend = end, yend = orig.y,
colour = type.ab),
size = 3, data = gff0)+
geom_segment(aes(x = start, y = new.y,
xend = end, yend = new.y,
colour = type.ab),
size = 3, data = gff) +
labs(x = 'Location', title = 'adaptive sub counts with only deletion') +
geom_label(data = data.frame(x = rep(20000, 2),
y = c(orig.y, new.y),
lab = c("original", "with acc")),
aes(x,y,label = lab), fill = 'lightsteelblue4', colour = "white", fontface = "bold") +
xlim(15000, max(as.loc1))
plot.h
orig.y <- 3; new.y <- 10
plot.h <-
ggplot(as.data.frame(as.loc1), aes(as.loc1)) +
geom_histogram(bins = 50) +
geom_segment(aes(x = start, y = orig.y,
xend = end, yend = orig.y,
colour = type.ab),
size = 3, data = gff0)+
geom_segment(aes(x = start, y = new.y,
xend = end, yend = new.y,
colour = type.ab),
size = 3, data = gff) +
labs(x = 'Location', title = 'adaptive sub counts with only deletion') +
geom_label(data = data.frame(x = rep(20000, 2),
y = c(orig.y, new.y),
lab = c("original", "with acc")),
aes(x,y,label = lab), fill = 'lightsteelblue4', colour = "white", fontface = "bold") +
xlim(15000, max(as.loc1))
plot.h
orig.y <- 5; new.y <- 10
plot.h <-
ggplot(as.data.frame(as.loc1), aes(as.loc1)) +
geom_histogram(bins = 50) +
geom_segment(aes(x = start, y = orig.y,
xend = end, yend = orig.y,
colour = type.ab),
size = 3, data = gff0)+
geom_segment(aes(x = start, y = new.y,
xend = end, yend = new.y,
colour = type.ab),
size = 3, data = gff) +
labs(x = 'Location', title = 'adaptive sub counts with only deletion') +
geom_label(data = data.frame(x = rep(20000, 2),
y = c(orig.y, new.y),
lab = c("original", "with acc")),
aes(x,y,label = lab), fill = 'lightsteelblue4', colour = "white", fontface = "bold") +
xlim(15000, max(as.loc1))
plot.h
orig.y <- 5; new.y <- 15
plot.h <-
ggplot(as.data.frame(as.loc1), aes(as.loc1)) +
geom_histogram(bins = 50) +
geom_segment(aes(x = start, y = orig.y,
xend = end, yend = orig.y,
colour = type.ab),
size = 3, data = gff0)+
geom_segment(aes(x = start, y = new.y,
xend = end, yend = new.y,
colour = type.ab),
size = 3, data = gff) +
labs(x = 'Location', title = 'adaptive sub counts with only deletion') +
geom_label(data = data.frame(x = rep(20000, 2),
y = c(orig.y, new.y),
lab = c("original", "with acc")),
aes(x,y,label = lab), fill = 'lightsteelblue4', colour = "white", fontface = "bold") +
xlim(15000, max(as.loc1))
plot.h
orig.y <- 5; new.y <- 13
plot.h <-
ggplot(as.data.frame(as.loc1), aes(as.loc1)) +
geom_histogram(bins = 50) +
geom_segment(aes(x = start, y = orig.y,
xend = end, yend = orig.y,
colour = type.ab),
size = 3, data = gff0)+
geom_segment(aes(x = start, y = new.y,
xend = end, yend = new.y,
colour = type.ab),
size = 3, data = gff) +
labs(x = 'Location', title = 'adaptive sub counts with only deletion') +
geom_label(data = data.frame(x = rep(20000, 2),
y = c(orig.y, new.y),
lab = c("original", "with acc")),
aes(x,y,label = lab), fill = 'lightsteelblue4', colour = "white", fontface = "bold") +
xlim(15000, max(as.loc1))
plot.h
pdf('v2_test_2.pdf')
orig.y <- 5; new.y <- 13
plot.h <-
ggplot(as.data.frame(as.loc1), aes(as.loc1)) +
geom_histogram(bins = 50) +
geom_segment(aes(x = start, y = orig.y,
xend = end, yend = orig.y,
colour = type.ab),
size = 3, data = gff0)+
geom_segment(aes(x = start, y = new.y,
xend = end, yend = new.y,
colour = type.ab),
size = 3, data = gff) +
labs(x = 'Location', title = 'adaptive sub counts with only deletion') +
geom_label(data = data.frame(x = rep(20000, 2),
y = c(orig.y, new.y),
lab = c("original", "with acc")),
aes(x,y,label = lab), fill = 'lightsteelblue4', colour = "white", fontface = "bold") +
xlim(15000, max(as.loc1))
plot.h
dev.off()
orig.y <- 5; new.y <- 10
plot.h <-
ggplot(as.data.frame(as.loc2), aes(as.loc2)) +
geom_histogram(bins = 50) +
geom_segment(aes(x = start, y = orig.y,
xend = end, yend = orig.y,
colour = type.ab),
size = 3, data = gff0)+
geom_segment(aes(x = start, y = new.y,
xend = end, yend = new.y,
colour = type.ab),
size = 3, data = gff) +
labs(x = 'Location', title = 'adaptive sub counts without insertion or deletion') +
geom_label(data = data.frame(x = rep(20000, 2),
y = c(orig.y, new.y),
lab = c("original", "with acc")),
aes(x,y,label = lab), fill = 'lightsteelblue4', colour = "white", fontface = "bold") +
xlim(15000, max(as.loc1))
plot.h
pdf('v2_test_2.pdf')
orig.y <- 5; new.y <- 13
plot.h <-
ggplot(as.data.frame(as.loc1), aes(as.loc1)) +
geom_histogram(bins = 50) +
geom_segment(aes(x = start, y = orig.y,
xend = end, yend = orig.y,
colour = type.ab),
size = 3, data = gff0)+
geom_segment(aes(x = start, y = new.y,
xend = end, yend = new.y,
colour = type.ab),
size = 3, data = gff) +
labs(x = 'Location', title = 'adaptive sub counts with only deletion') +
geom_label(data = data.frame(x = rep(5000, 2),
y = c(orig.y, new.y),
lab = c("original", "with acc")),
aes(x,y,label = lab), fill = 'lightsteelblue4', colour = "white", fontface = "bold") +
xlim(0, max(as.loc1))
plot.h
dev.off()
50/2000*120
150/2000*120
orig.y <- 3; new.y <- 9
plot.h <-
ggplot(as.data.frame(as.loc1), aes(as.loc1)) +
geom_histogram(bins = 50) +
geom_segment(aes(x = start, y = orig.y,
xend = end, yend = orig.y,
colour = type.ab),
size = 3, data = gff0)+
geom_segment(aes(x = start, y = new.y,
xend = end, yend = new.y,
colour = type.ab),
size = 3, data = gff) +
labs(x = 'Location', title = 'adaptive sub counts with only deletion') +
geom_label(data = data.frame(x = rep(5000, 2),
y = c(orig.y, new.y),
lab = c("original", "with acc")),
aes(x,y,label = lab), fill = 'lightsteelblue4', colour = "white", fontface = "bold") +
xlim(0, max(as.loc1))
plot.h
pdf('v2_test_2.pdf')
orig.y <- 3; new.y <- 9
plot.h <-
ggplot(as.data.frame(as.loc1), aes(as.loc1)) +
geom_histogram(bins = 50) +
geom_segment(aes(x = start, y = orig.y,
xend = end, yend = orig.y,
colour = type.ab),
size = 3, data = gff0)+
geom_segment(aes(x = start, y = new.y,
xend = end, yend = new.y,
colour = type.ab),
size = 3, data = gff) +
labs(x = 'Location', title = 'adaptive sub counts with only deletion') +
geom_label(data = data.frame(x = rep(5000, 2),
y = c(orig.y, new.y),
lab = c("original", "with acc")),
aes(x,y,label = lab), fill = 'lightsteelblue4', colour = "white", fontface = "bold") +
xlim(0, max(as.loc1))
plot.h
dev.off()
orig.y <- 5; new.y <- 10
plot.h <-
ggplot(as.data.frame(as.loc2), aes(as.loc2)) +
geom_histogram(bins = 50) +
geom_segment(aes(x = start, y = orig.y,
xend = end, yend = orig.y,
colour = type.ab),
size = 3, data = gff0)+
geom_segment(aes(x = start, y = new.y,
xend = end, yend = new.y,
colour = type.ab),
size = 3, data = gff) +
labs(x = 'Location', title = 'adaptive sub counts without insertion or deletion') +
geom_label(data = data.frame(x = rep(5000, 2),
y = c(orig.y, new.y),
lab = c("original", "with acc")),
aes(x,y,label = lab), fill = 'lightsteelblue4', colour = "white", fontface = "bold") +
xlim(0, max(as.loc1))
plot.h
50/2000*80
orig.y <- 2; new.y <- 6
plot.h <-
ggplot(as.data.frame(as.loc2), aes(as.loc2)) +
geom_histogram(bins = 50) +
geom_segment(aes(x = start, y = orig.y,
xend = end, yend = orig.y,
colour = type.ab),
size = 3, data = gff0)+
geom_segment(aes(x = start, y = new.y,
xend = end, yend = new.y,
colour = type.ab),
size = 3, data = gff) +
labs(x = 'Location', title = 'adaptive sub counts without insertion or deletion') +
geom_label(data = data.frame(x = rep(5000, 2),
y = c(orig.y, new.y),
lab = c("original", "with acc")),
aes(x,y,label = lab), fill = 'lightsteelblue4', colour = "white", fontface = "bold") +
xlim(0, max(as.loc1))
plot.h
orig.y <- 2; new.y <- 7
plot.h <-
ggplot(as.data.frame(as.loc2), aes(as.loc2)) +
geom_histogram(bins = 50) +
geom_segment(aes(x = start, y = orig.y,
xend = end, yend = orig.y,
colour = type.ab),
size = 3, data = gff0)+
geom_segment(aes(x = start, y = new.y,
xend = end, yend = new.y,
colour = type.ab),
size = 3, data = gff) +
labs(x = 'Location', title = 'adaptive sub counts without insertion or deletion') +
geom_label(data = data.frame(x = rep(5000, 2),
y = c(orig.y, new.y),
lab = c("original", "with acc")),
aes(x,y,label = lab), fill = 'lightsteelblue4', colour = "white", fontface = "bold") +
xlim(0, max(as.loc1))
plot.h
pdf('v2_test_3.pdf')
orig.y <- 2; new.y <- 7
plot.h <-
ggplot(as.data.frame(as.loc2), aes(as.loc2)) +
geom_histogram(bins = 50) +
geom_segment(aes(x = start, y = orig.y,
xend = end, yend = orig.y,
colour = type.ab),
size = 3, data = gff0)+
geom_segment(aes(x = start, y = new.y,
xend = end, yend = new.y,
colour = type.ab),
size = 3, data = gff) +
labs(x = 'Location', title = 'adaptive sub counts without insertion or deletion') +
geom_label(data = data.frame(x = rep(5000, 2),
y = c(orig.y, new.y),
lab = c("original", "with acc")),
aes(x,y,label = lab), fill = 'lightsteelblue4', colour = "white", fontface = "bold") +
xlim(0, max(as.loc1))
plot.h
dev.off()
as <- as1 <- as2 <- rep(0, nrow(sequ))
as[as.loc] <- 1
as1[as.loc1] <- 1
as2[as.loc2] <- 1
neutral <- neutral0 <- rep(1, nrow(sequ))
c(gff$start:gff$end)
gff$start:gff$end
apply(cbind(gff$start, gff$end), function(x) x[1]:x[2])
apply(cbind(gff$start, gff$end), 1, function(x) x[1]:x[2])
Reduce(c, apply(cbind(gff$start, gff$end), 1, function(x) x[1]:x[2]))
neutral[Reduce(c, apply(cbind(gff$start, gff$end), 1, function(x) x[1]:x[2]))] <- 0
as <- as1 <- as2 <- rep(0, nrow(sequ))
as[as.loc] <- 1
as1[as.loc1] <- 1
as2[as.loc2] <- 1
neutral <- neutral0 <- rep(1, nrow(sequ))
neutral[Reduce(c,
apply(cbind(gff$start, gff$end), 1,
function(x) x[1]:x[2]))] <- 0
neutral0[Reduce(c,
apply(cbind(gff0$start, gff0$end), 1,
function(x) x[1]:x[2]))] <- 0
prop.test(as, neutral)
table(as, neutral)
as <- as1 <- as2 <- rep('AS', nrow(sequ))
as <- as1 <- as2 <- rep('AS', nrow(sequ))
as[as.loc] <- 'nonAS'
as1[as.loc1] <- 'nonAS'
as2[as.loc2] <- 'nonAS'
as <- as1 <- as2 <- rep('AS', nrow(sequ))
as[as.loc] <- as1[as.loc1] <- as2[as.loc2] <- 'nonAS'
neutral <- neutral0 <- rep('Neutral', nrow(sequ))
neutral[Reduce(c,
apply(cbind(gff$start, gff$end), 1,
function(x) x[1]:x[2]))] <- 'nonNeutral'
neutral0[Reduce(c,
apply(cbind(gff0$start, gff0$end), 1,
function(x) x[1]:x[2]))] <- 'nonNeutral'
prop.test(table(neutral, as))
table(neutral, as)
prop.test(table(neutral, as1))
prop.test(table(neutral0, as1))
prop.test(table(neutral, as2))
prop.test(table(neutral0, as2))
prop.test(table(neutral, as1))
prop.test(table(neutral0, as1))
prop.test(table(neutral, as2))
prop.test(table(neutral0, as2))
prop.test(table(neutral0, as))
prop.test(table(neutral, as))
prop.test(table(neutral0, as1))
prop.test(table(neutral, as1))
prop.test(table(neutral0, as2))
prop.test(table(neutral, as2))
prop.test(table(neutral0, as), correct = F)
prop.test(table(neutral, as), correct = F)
neutral
gff
gff0
